# Allows us to start the stack without touching too much of our local system
#
# note: the application initialization will download/unpack/configure files
#       in the local directory...
#
# ##### Usage:
# *0. Create a broken symlink: `ln -sf "/.npm-packages/node_modules/" node_modules`
# 1. Start the database: `docker-compose up -d mongo`
# 2. Start the application:  `docker-compose run formio`
# [3]. Stop the database: `docker-compose down` (add --volumes to clear data)
# [4]. Remove lingering docker images: `docker-compose down -v --rmi all`
#
# *TODO: Step 0 is for the bcrypt binary compiled on alpine, which is required...
#        but this step feels like an anti-pattern and a better approach should be found

version: '3.7'
services:
  formio:
    build: ./
    # The app will restart until Mongo is listening
    restart: always
    ports:
      - "3001:3001"
      - "8080:8080"
    # The application wants to download things to the local directory
    # TODO: really wish I could mount this as read-only
    volumes:
      - ./:/app:rw
    environment:
      DEBUG: formio:*
      NODE_CONFIG: '{"mongo": "mongodb://odyssey:rdpt5zK9DDPZNRysG3@iad2-c12-2.mongo.objectrocket.com:52485,iad2-c12-1.mongo.objectrocket.com:52485,iad2-c12-0.mongo.objectrocket.com:52485/formio?replicaSet=9abb9ad30493406b9eed15c9298ab6ea&retryWrites=false"}'
      ROOT_EMAIL: admin@example.com
      ROOT_PASSWORD: CHANGEME
    stdin_open: true  # -i
    tty: true         # -t

volumes:
  mdb-data:
